// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: currency/currency.proto

package currency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyCode  string                 `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencyName  string                 `protobuf:"bytes,2,opt,name=currency_name,json=currencyName,proto3" json:"currency_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCurrencyRequest) Reset() {
	*x = CreateCurrencyRequest{}
	mi := &file_currency_currency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCurrencyRequest) ProtoMessage() {}

func (x *CreateCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCurrencyRequest.ProtoReflect.Descriptor instead.
func (*CreateCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_currency_currency_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCurrencyRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CreateCurrencyRequest) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

type CurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyId    string                 `protobuf:"bytes,1,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrencyResponse) Reset() {
	*x = CurrencyResponse{}
	mi := &file_currency_currency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyResponse) ProtoMessage() {}

func (x *CurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyResponse.ProtoReflect.Descriptor instead.
func (*CurrencyResponse) Descriptor() ([]byte, []int) {
	return file_currency_currency_proto_rawDescGZIP(), []int{1}
}

func (x *CurrencyResponse) GetCurrencyId() string {
	if x != nil {
		return x.CurrencyId
	}
	return ""
}

type GetCurrenciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyCode  string                 `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrenciesRequest) Reset() {
	*x = GetCurrenciesRequest{}
	mi := &file_currency_currency_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesRequest) ProtoMessage() {}

func (x *GetCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*GetCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_currency_currency_proto_rawDescGZIP(), []int{2}
}

func (x *GetCurrenciesRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyId    string                 `protobuf:"bytes,1,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencyName  string                 `protobuf:"bytes,3,opt,name=currency_name,json=currencyName,proto3" json:"currency_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrencyResponse) Reset() {
	*x = GetCurrencyResponse{}
	mi := &file_currency_currency_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyResponse) ProtoMessage() {}

func (x *GetCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyResponse.ProtoReflect.Descriptor instead.
func (*GetCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_currency_currency_proto_rawDescGZIP(), []int{3}
}

func (x *GetCurrencyResponse) GetCurrencyId() string {
	if x != nil {
		return x.CurrencyId
	}
	return ""
}

func (x *GetCurrencyResponse) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetCurrencyResponse) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

type ListCurrenciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      []*CurrencyResponse    `protobuf:"bytes,1,rep,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCurrenciesResponse) Reset() {
	*x = ListCurrenciesResponse{}
	mi := &file_currency_currency_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrenciesResponse) ProtoMessage() {}

func (x *ListCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*ListCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_currency_currency_proto_rawDescGZIP(), []int{4}
}

func (x *ListCurrenciesResponse) GetCurrency() []*CurrencyResponse {
	if x != nil {
		return x.Currency
	}
	return nil
}

type DeleteCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCurrencyResponse) Reset() {
	*x = DeleteCurrencyResponse{}
	mi := &file_currency_currency_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCurrencyResponse) ProtoMessage() {}

func (x *DeleteCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCurrencyResponse.ProtoReflect.Descriptor instead.
func (*DeleteCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_currency_currency_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCurrencyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_currency_currency_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_currency_currency_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_currency_currency_proto_rawDescGZIP(), []int{6}
}

var File_currency_currency_proto protoreflect.FileDescriptor

const file_currency_currency_proto_rawDesc = "" +
	"\n" +
	"\x17currency/currency.proto\x12\bcurrency\"a\n" +
	"\x15CreateCurrencyRequest\x12#\n" +
	"\rcurrency_code\x18\x01 \x01(\tR\fcurrencyCode\x12#\n" +
	"\rcurrency_name\x18\x02 \x01(\tR\fcurrencyName\"3\n" +
	"\x10CurrencyResponse\x12\x1f\n" +
	"\vcurrency_id\x18\x01 \x01(\tR\n" +
	"currencyId\";\n" +
	"\x14GetCurrenciesRequest\x12#\n" +
	"\rcurrency_code\x18\x01 \x01(\tR\fcurrencyCode\"\x80\x01\n" +
	"\x13GetCurrencyResponse\x12\x1f\n" +
	"\vcurrency_id\x18\x01 \x01(\tR\n" +
	"currencyId\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12#\n" +
	"\rcurrency_name\x18\x03 \x01(\tR\fcurrencyName\"P\n" +
	"\x16ListCurrenciesResponse\x126\n" +
	"\bcurrency\x18\x01 \x03(\v2\x1a.currency.CurrencyResponseR\bcurrency\"2\n" +
	"\x16DeleteCurrencyResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\a\n" +
	"\x05Empty2\xf8\x01\n" +
	"\x0fCurrencyService\x12M\n" +
	"\x0eCreateCurrency\x12\x1f.currency.CreateCurrencyRequest\x1a\x1a.currency.CurrencyResponse\x12N\n" +
	"\rGetCurrencies\x12\x1e.currency.GetCurrenciesRequest\x1a\x1d.currency.GetCurrencyResponse\x12F\n" +
	"\x11GetListCurrencies\x12\x0f.currency.Empty\x1a .currency.ListCurrenciesResponseB1Z/github.com/DmitryGoculyak/Crash-Protos/currencyb\x06proto3"

var (
	file_currency_currency_proto_rawDescOnce sync.Once
	file_currency_currency_proto_rawDescData []byte
)

func file_currency_currency_proto_rawDescGZIP() []byte {
	file_currency_currency_proto_rawDescOnce.Do(func() {
		file_currency_currency_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_currency_currency_proto_rawDesc), len(file_currency_currency_proto_rawDesc)))
	})
	return file_currency_currency_proto_rawDescData
}

var file_currency_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_currency_currency_proto_goTypes = []any{
	(*CreateCurrencyRequest)(nil),  // 0: currency.CreateCurrencyRequest
	(*CurrencyResponse)(nil),       // 1: currency.CurrencyResponse
	(*GetCurrenciesRequest)(nil),   // 2: currency.GetCurrenciesRequest
	(*GetCurrencyResponse)(nil),    // 3: currency.GetCurrencyResponse
	(*ListCurrenciesResponse)(nil), // 4: currency.ListCurrenciesResponse
	(*DeleteCurrencyResponse)(nil), // 5: currency.DeleteCurrencyResponse
	(*Empty)(nil),                  // 6: currency.Empty
}
var file_currency_currency_proto_depIdxs = []int32{
	1, // 0: currency.ListCurrenciesResponse.currency:type_name -> currency.CurrencyResponse
	0, // 1: currency.CurrencyService.CreateCurrency:input_type -> currency.CreateCurrencyRequest
	2, // 2: currency.CurrencyService.GetCurrencies:input_type -> currency.GetCurrenciesRequest
	6, // 3: currency.CurrencyService.GetListCurrencies:input_type -> currency.Empty
	1, // 4: currency.CurrencyService.CreateCurrency:output_type -> currency.CurrencyResponse
	3, // 5: currency.CurrencyService.GetCurrencies:output_type -> currency.GetCurrencyResponse
	4, // 6: currency.CurrencyService.GetListCurrencies:output_type -> currency.ListCurrenciesResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_currency_currency_proto_init() }
func file_currency_currency_proto_init() {
	if File_currency_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_currency_currency_proto_rawDesc), len(file_currency_currency_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_currency_currency_proto_goTypes,
		DependencyIndexes: file_currency_currency_proto_depIdxs,
		MessageInfos:      file_currency_currency_proto_msgTypes,
	}.Build()
	File_currency_currency_proto = out.File
	file_currency_currency_proto_goTypes = nil
	file_currency_currency_proto_depIdxs = nil
}
